[{"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\index.tsx":"1","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\reportWebVitals.ts":"2","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\App.tsx":"3","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\navigation\\Navigation.component.tsx":"4","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\comon\\Container.component.tsx":"5","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\home\\Home.component.tsx":"6","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\newsFeed\\NewsFeed.page.tsx":"7","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\utils\\routes.tsx":"8","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\login\\Login.page.tsx":"9","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\signup\\SignUp.page.tsx":"10","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\profile\\Profile.page.tsx":"11","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\userDetailes\\UserDetailes.component.tsx":"12","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileAvater\\ProfileAvater.component.tsx":"13","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileCover\\ProfileCover.component.tsx":"14","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileTab\\ProfileTab.component.tsx":"15","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Create\\CreatePost\\CreatePost.component.tsx":"16","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\store\\index.ts":"17","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\post.ts":"18","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\hooks\\easyPeasy.ts":"19"},{"size":655,"mtime":1614272020698,"results":"20","hashOfConfig":"21"},{"size":440,"mtime":1612463061260,"results":"22","hashOfConfig":"21"},{"size":305,"mtime":1614954034746,"results":"23","hashOfConfig":"21"},{"size":5697,"mtime":1614272676744,"results":"24","hashOfConfig":"21"},{"size":165,"mtime":1612541122458,"results":"25","hashOfConfig":"21"},{"size":1141,"mtime":1614272733250,"results":"26","hashOfConfig":"21"},{"size":111,"mtime":1612518624999,"results":"27","hashOfConfig":"21"},{"size":122,"mtime":1612541122484,"results":"28","hashOfConfig":"21"},{"size":1862,"mtime":1612525099909,"results":"29","hashOfConfig":"21"},{"size":3202,"mtime":1612525099910,"results":"30","hashOfConfig":"21"},{"size":836,"mtime":1612541122464,"results":"31","hashOfConfig":"21"},{"size":1576,"mtime":1612541122462,"results":"32","hashOfConfig":"21"},{"size":708,"mtime":1612541122459,"results":"33","hashOfConfig":"21"},{"size":1036,"mtime":1612541122460,"results":"34","hashOfConfig":"21"},{"size":487,"mtime":1612541122461,"results":"35","hashOfConfig":"21"},{"size":1423,"mtime":1614272634824,"results":"36","hashOfConfig":"21"},{"size":273,"mtime":1614271770098,"results":"37","hashOfConfig":"21"},{"size":325,"mtime":1614272232016,"results":"38","hashOfConfig":"21"},{"size":320,"mtime":1614271821182,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"79qke7",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\index.tsx",[],["83","84"],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\reportWebVitals.ts",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\App.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\navigation\\Navigation.component.tsx",["85"],"import { Input, Space, Tooltip, Popover, Avatar, Button, Typography ,List, Divider} from \"antd\";\r\nimport { EditOutlined, FlagOutlined, LoginOutlined, LogoutOutlined, NotificationOutlined, PlusOutlined, SettingOutlined, UserOutlined } from '@ant-design/icons'\r\nimport React from \"react\";\r\nimport './navigation.css'\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport * as ROUTES from '../../utils/routes'\r\nimport { CreatePost } from \"../Create/CreatePost/CreatePost.component\";\r\nimport { useStoreState ,useStoreActions} from \"../../hooks/easyPeasy\";\r\n\r\nconst { Search } = Input\r\ninterface NavigationProps { }\r\n\r\nconst user = true\r\nexport const Navigation: React.FC<NavigationProps> = ({ children }) => {\r\n\r\n  const {setCreatePostDia}  = useStoreActions(state=>state.post)\r\n  const {createPostDia}  = useStoreState(state=>state.post)\r\n  const history = useHistory()\r\n\r\n\r\n  const createPopover = () => (\r\n    <List itemLayout=\"horizontal\" style={{ width: \"150px\" }} split={false}>\r\n    <List.Item\r\n      style={{ cursor: \"pointer\" }}\r\n      onClick={() => {\r\n        console.log(\"sdfbgdzjshfbvgdhbv->>\")\r\n        setCreatePostDia(true)}}\r\n    >\r\n      <Space size=\"small\" direction=\"horizontal\">\r\n        {/* <PlusOutlined /> */}\r\n        <Typography>Post</Typography>\r\n      </Space>\r\n    </List.Item>\r\n    <List.Item\r\n      // onClick={() => setEventDia()}\r\n      style={{ cursor: \"pointer\" }}>\r\n      <Space size=\"small\" direction=\"horizontal\">\r\n        {/* <PlusOutlined /> */}\r\n        <Typography>Event</Typography>\r\n      </Space>\r\n    </List.Item>\r\n  </List>\r\n  )\r\n\r\n  const notificationPopover = () => (\r\n    <div>\r\n      <List>\r\n        {[1, 2, 3, 4].map((i) => {\r\n          return (\r\n            <List.Item>\r\n              <Typography>Simple Notification</Typography>\r\n            </List.Item>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const profilePopover = () => (\r\n    <List\r\n      itemLayout=\"horizontal\"\r\n      style={{ width: \"150px\", cursor: \"pointer\" }}\r\n      split={false}\r\n    >\r\n      {user ? (\r\n        <>\r\n          {\" \"}\r\n          <List.Item>\r\n            <Space size=\"small\" direction=\"horizontal\">\r\n              <UserOutlined />\r\n              <NavLink to={ROUTES.PROFILE}>Profile</NavLink>\r\n            </Space>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Space size=\"small\" direction=\"horizontal\">\r\n              <FlagOutlined />\r\n    \r\n              <NavLink to={\"\"}>Saved</NavLink>\r\n            </Space>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Space size=\"small\" direction=\"horizontal\">\r\n              <SettingOutlined />\r\n  \r\n              <NavLink to={\"\"}>Setting</NavLink>\r\n            </Space>\r\n          </List.Item>\r\n          <Divider></Divider>\r\n          <List.Item>\r\n            <Button\r\n              // onClick={() => {\r\n              //   localStorage.removeItem(\"rwdtoken\");\r\n  \r\n              //   openNotificationWithIcon(\r\n              //     \"success\",\r\n              //     \"Logged Out SuccessFull\",\r\n              //     \"Hope you will come back\"\r\n              //   );\r\n  \r\n              //   // history.push(\"/\");\r\n              //   setTimeout(() => {\r\n              //     window.location.reload();\r\n              //   }, 600);\r\n              // }}\r\n              style={{ border: \"none\" }}\r\n              icon={<LogoutOutlined />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </List.Item>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <List.Item>\r\n            <Space>\r\n              <LoginOutlined />\r\n              <NavLink to=\"/login\">Login</NavLink>\r\n            </Space>\r\n          </List.Item>\r\n          <List.Item>\r\n            <Space>\r\n              <EditOutlined />\r\n              <NavLink to=\"/signup\">Signup</NavLink>\r\n            </Space>\r\n          </List.Item>\r\n        </>\r\n      )}\r\n    </List>\r\n  );\r\n\r\n\r\n  return (\r\n    <div className=\"flex-between\">\r\n      <div>\r\n        <h4\r\n          className=\"pointer\"\r\n          onClick={() => {\r\n            history.push(\"/\");\r\n          }}\r\n        >\r\n          RW&D\r\n              </h4>\r\n      </div>\r\n      <div>\r\n        <Search placeholder=\"Search...\" size=\"small\" style={{ textAlign: \"inherit\", marginTop: '15px' }} />\r\n      </div>\r\n      <div>\r\n        <div className=\"sectionDesktop\">\r\n          <Space direction=\"horizontal\" size=\"large\">\r\n            {/* <Tooltip title=\"Create\"> */}\r\n              <Popover\r\n                content={createPopover()}\r\n                placement=\"bottomLeft\"\r\n                trigger=\"click\"\r\n                className=\"pointer\"\r\n              >\r\n                Create\r\n              </Popover>\r\n            {/* </Tooltip> */}\r\n            <Tooltip title=\"Notification\">\r\n              <Popover\r\n                content={notificationPopover()}\r\n                placement=\"bottomLeft\"\r\n                trigger=\"click\"\r\n              >\r\n                <NotificationOutlined style={{ color: \"#000\" }} />\r\n              </Popover>\r\n            </Tooltip>\r\n            <Tooltip title=\"user\">\r\n              <Popover\r\n                content={profilePopover()}\r\n                placement=\"bottomLeft\"\r\n                trigger=\"click\"\r\n              >\r\n                <Avatar\r\n                  // src={`${API_BASE}/${userData?.photo}`}\r\n                  size=\"large\"\r\n                  style={{ marginRight: 5, cursor: \"pointer\" }}\r\n                />\r\n              </Popover>\r\n            </Tooltip>\r\n          </Space>\r\n        </div>\r\n        <div className=\"sectionMobile\">\r\n          <Button>moreIcon</Button>\r\n        </div>\r\n      </div>\r\n      \r\n      {createPostDia ? <CreatePost/> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\comon\\Container.component.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\home\\Home.component.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\newsFeed\\NewsFeed.page.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\utils\\routes.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\login\\Login.page.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\signup\\SignUp.page.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\profile\\Profile.page.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\userDetailes\\UserDetailes.component.tsx",["86","87"],"\r\nimport { EditOutlined } from '@ant-design/icons'\r\nimport { Button, Card, Rate, Tooltip } from 'antd'\r\nimport React from 'react'\r\nimport { ProfileAvater } from '../profileAvater/ProfileAvater.component'\r\nimport { ProfileCover } from '../profileCover/ProfileCover.component'\r\nimport './userDetailes.css'\r\n\r\nexport const UserDetailes: React.FC = ({ children }) => {\r\n    return <div>\r\n        <Card\r\n            style={{ width: 300, height: \"300px\" }}\r\n            actions={[\r\n                <Tooltip title=\"Update Profile\">\r\n                    <Button icon={<EditOutlined />} style={{width:\"80%\",borderRadius:\"10px\"}}></Button>\r\n                </Tooltip>\r\n\r\n            ]}\r\n        >\r\n            <div style={{ color: \"black\", textAlign: \"left\", marginTop: \"80px\" }}>\r\n                <div style={{ textAlign: \"center\" }}> <Tooltip title=\"Rating\"><Rate value={10} disabled /></Tooltip> <span>5.0</span></div>\r\n                <div>\r\n                    <div>\r\n                        <span style={{ color: \"black\" }}></span>\r\n                    </div>\r\n                    <div>\r\n                        <label style={{ color: \"black\" }}>Phone:</label>\r\n                    </div>\r\n                    <div>\r\n                        <label style={{ color: \"black\" }}>\r\n                            Address:\r\n                  </label>\r\n                    </div>\r\n                    <div>\r\n                        <label style={{ color: \"black\" }}>Email:</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Card>\r\n    </div>\r\n}\r\n\r\n","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileAvater\\ProfileAvater.component.tsx",[],["88","89"],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileCover\\ProfileCover.component.tsx",["90"],"import { CameraOutlined } from '@ant-design/icons'\r\nimport { Tooltip } from 'antd'\r\nimport React from 'react'\r\nimport { ProfileAvater } from '../profileAvater/ProfileAvater.component'\r\nimport './profileCover.css'\r\nexport const ProfileCover: React.FC = ({ children }) => {\r\n    return   <div style={{ position: \"relative\" }}>\r\n    <div style={{marginTop:\"5px\"}}>\r\n      <img\r\n        src=\"https://i.pinimg.com/originals/23/05/35/230535d2013c6b8f34e2304d050df22f.jpg\"\r\n        height=\"300px\"\r\n        width=\"100%\"\r\n        style={{\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundPosition: \"center\",\r\n          position: \"relative\",\r\n          borderRadius:\"15px\"\r\n        }}\r\n      ></img>\r\n      <Tooltip title=\"Uplode Cover Photo\">\r\n        <label className=\"CoverPhotoUplodeLabel\">\r\n          <CameraOutlined style={{ color: \"#fff\" }} />\r\n          <input type=\"file\" style={{ display: \"none\" }}></input>\r\n        </label>\r\n      </Tooltip>\r\n    </div>\r\n    <div>\r\n        <ProfileAvater />\r\n    </div>\r\n  </div>\r\n\r\n}\r\n","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileTab\\ProfileTab.component.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Create\\CreatePost\\CreatePost.component.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\store\\index.ts",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\post.ts",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\hooks\\easyPeasy.ts",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":91,"nodeType":"97","messageId":"98","endLine":2,"endColumn":103},{"ruleId":"95","severity":1,"message":"99","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":23},{"ruleId":"95","severity":1,"message":"100","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":22},{"ruleId":"91","replacedBy":"101"},{"ruleId":"93","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":9,"column":7,"nodeType":"105","endLine":19,"endColumn":8},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"@typescript-eslint/no-unused-vars","'PlusOutlined' is defined but never used.","Identifier","unusedVar","'ProfileAvater' is defined but never used.","'ProfileCover' is defined but never used.",["106"],["107"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]