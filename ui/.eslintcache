[{"/home/mizan/Documents/myprojects/Read-write-share/ui/src/index.tsx":"1","/home/mizan/Documents/myprojects/Read-write-share/ui/src/reportWebVitals.ts":"2","/home/mizan/Documents/myprojects/Read-write-share/ui/src/App.tsx":"3","/home/mizan/Documents/myprojects/Read-write-share/ui/src/store/index.ts":"4","/home/mizan/Documents/myprojects/Read-write-share/ui/src/hooks/easyPeasy.ts":"5","/home/mizan/Documents/myprojects/Read-write-share/ui/src/pages/home/Home.component.tsx":"6","/home/mizan/Documents/myprojects/Read-write-share/ui/src/states/event.ts":"7","/home/mizan/Documents/myprojects/Read-write-share/ui/src/states/post.ts":"8","/home/mizan/Documents/myprojects/Read-write-share/ui/src/states/profile.ts":"9","/home/mizan/Documents/myprojects/Read-write-share/ui/src/states/auth.ts":"10","/home/mizan/Documents/myprojects/Read-write-share/ui/src/utils/routes.tsx":"11","/home/mizan/Documents/myprojects/Read-write-share/ui/src/pages/newsFeed/NewsFeed.page.tsx":"12","/home/mizan/Documents/myprojects/Read-write-share/ui/src/pages/login/Login.page.tsx":"13","/home/mizan/Documents/myprojects/Read-write-share/ui/src/pages/signup/SignUp.page.tsx":"14","/home/mizan/Documents/myprojects/Read-write-share/ui/src/pages/profile/Profile.page.tsx":"15","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/navigation/Navigation.component.tsx":"16","/home/mizan/Documents/myprojects/Read-write-share/ui/src/services/http.ts":"17","/home/mizan/Documents/myprojects/Read-write-share/ui/src/services/profile.ts":"18","/home/mizan/Documents/myprojects/Read-write-share/ui/src/services/auth.ts":"19","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/profileTab/ProfileTab.component.tsx":"20","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/comon/Container.component.tsx":"21","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/profileCover/ProfileCover.component.tsx":"22","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/userDetailes/UserDetailes.component.tsx":"23","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/Create/CreatePost/CreatePost.component.tsx":"24","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/Create/CreateEvent/CreateEvent.component.tsx":"25","/home/mizan/Documents/myprojects/Read-write-share/ui/src/utils/config.ts":"26","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/profileAvater/ProfileAvater.component.tsx":"27","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/Modals/updateUser/UpdateUser.component.tsx":"28","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/DropDowns/EventType.tsx":"29","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/userpost/UserPost.component.tsx":"30"},{"size":662,"mtime":1647453167504,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1647453167508,"results":"33","hashOfConfig":"32"},{"size":735,"mtime":1647454669193,"results":"34","hashOfConfig":"32"},{"size":567,"mtime":1647453167508,"results":"35","hashOfConfig":"32"},{"size":313,"mtime":1647453167504,"results":"36","hashOfConfig":"32"},{"size":1127,"mtime":1647454686041,"results":"37","hashOfConfig":"32"},{"size":1168,"mtime":1647453167508,"results":"38","hashOfConfig":"32"},{"size":1136,"mtime":1647453167508,"results":"39","hashOfConfig":"32"},{"size":2753,"mtime":1647453167508,"results":"40","hashOfConfig":"32"},{"size":2923,"mtime":1647453167508,"results":"41","hashOfConfig":"32"},{"size":119,"mtime":1647453167508,"results":"42","hashOfConfig":"32"},{"size":105,"mtime":1647453167508,"results":"43","hashOfConfig":"32"},{"size":2578,"mtime":1647453167508,"results":"44","hashOfConfig":"32"},{"size":4001,"mtime":1647453167508,"results":"45","hashOfConfig":"32"},{"size":811,"mtime":1647453167508,"results":"46","hashOfConfig":"32"},{"size":5734,"mtime":1647453167504,"results":"47","hashOfConfig":"32"},{"size":1978,"mtime":1647453167508,"results":"48","hashOfConfig":"32"},{"size":263,"mtime":1647453167508,"results":"49","hashOfConfig":"32"},{"size":292,"mtime":1647453167508,"results":"50","hashOfConfig":"32"},{"size":649,"mtime":1647455039419,"results":"51","hashOfConfig":"32"},{"size":159,"mtime":1647453167504,"results":"52","hashOfConfig":"32"},{"size":1869,"mtime":1647453167504,"results":"53","hashOfConfig":"32"},{"size":2100,"mtime":1647453167504,"results":"54","hashOfConfig":"32"},{"size":1818,"mtime":1647453167504,"results":"55","hashOfConfig":"32"},{"size":3118,"mtime":1647453167504,"results":"56","hashOfConfig":"32"},{"size":109,"mtime":1647453167508,"results":"57","hashOfConfig":"32"},{"size":1695,"mtime":1647453167504,"results":"58","hashOfConfig":"32"},{"size":2793,"mtime":1647453167504,"results":"59","hashOfConfig":"32"},{"size":954,"mtime":1647453167504,"results":"60","hashOfConfig":"32"},{"size":596,"mtime":1647455492453,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1n75jrd",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},"/home/mizan/Documents/myprojects/Read-write-share/ui/src/index.tsx",[],["134","135"],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/reportWebVitals.ts",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/App.tsx",["136"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { Home } from \"./pages/home/Home.component\";\nimport \"suneditor/dist/css/suneditor.min.css\";\nimport { useStoreActions } from \"../src/hooks/easyPeasy\";\nimport jwt_decode from \"jwt-decode\";\n\nfunction App() {\n  const { setUserData } = useStoreActions((a) => a.auth);\n  const { getUserDetails } = useStoreActions((a) => a.profile);\n  useEffect(() => {\n    let token = localStorage.getItem(\"rwd_t\");\n\n    if (token) {\n      const decoded: any = jwt_decode(token);\n      setUserData(decoded.user);\n      getUserDetails(decoded.user.id);\n    }\n  }, []);\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","/home/mizan/Documents/myprojects/Read-write-share/ui/src/store/index.ts",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/hooks/easyPeasy.ts",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/pages/home/Home.component.tsx",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/states/event.ts",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/states/post.ts",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/states/profile.ts",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/states/auth.ts",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/utils/routes.tsx",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/pages/newsFeed/NewsFeed.page.tsx",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/pages/login/Login.page.tsx",["137"],"import { KeyOutlined, MailOutlined } from '@ant-design/icons'\nimport { Button, Col, Form, Input, Row,notification } from 'antd'\nimport React, { useEffect } from 'react'\nimport { useHistory } from 'react-router'\nimport { LoginDataI } from './login'\nimport './login.css'\nimport { useStoreActions, useStoreState } from '../../hooks/easyPeasy'\nimport * as ROUTER from '../../utils/routes'\n\nexport const Login: React.FC = () => {\n\n  const { loginUser, setLoginUserRes } = useStoreActions(a => a.auth)\n\n  const { loginUserLod, loginUserRes } = useStoreState(s => s.auth)\n\n  const [form] = Form.useForm()\n  const history = useHistory()\n\n  useEffect(()=>{\n    if(loginUserRes){\n      if(loginUserRes.success){\n        history.push(ROUTER.ROOT)\n        setLoginUserRes(null)\n      }else{\n        notification.error({message:\"UnAuthorized\"})\n      }\n    }\n  },[loginUserRes])\n\n  function handleLogin(value: LoginDataI) {\n    loginUser(value)\n  }\n\n  return <div className=\"login\"><h2>Read Write & Share</h2>\n    <div style={{ background: \"#fff\", padding: \"20px\" }}>\n      <Form name=\"login\" form={form} onFinish={(value) => handleLogin(value)}>\n        <Form.Item\n          style={{ width: \"400px\" }}\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username or email!\",\n            },\n          ]}\n        >\n          <Input\n            name=\"email\"\n            type=\"email\"\n            style={{ width: \"400px\" }}\n            prefix={<MailOutlined />}\n            placeholder=\"Email\"\n            size=\"large\"\n          />\n        </Form.Item>\n        <Form.Item\n          style={{ width: \"400px\" }}\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input\n            style={{ width: \"400px\" }}\n            prefix={<KeyOutlined />}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            size=\"large\"\n          />\n        </Form.Item>\n        <Row justify=\"space-between\">\n          <Col></Col>\n          <Col>\n            <Button\n              htmlType=\"submit\"\n              style={{ color: \"#000\" }}\n              loading={loginUserLod}\n            >\n              Login\n            </Button>\n          </Col>\n        </Row>\n        <div className=\"form-group\">\n          <a\n            href=\"/signup\"\n          // onClick={() => this.props.history.push(\"/signup\")}\n          >\n            Don't have an Account? Signup\n          </a>\n        </div>\n      </Form>\n    </div></div>\n}\n\n","/home/mizan/Documents/myprojects/Read-write-share/ui/src/pages/signup/SignUp.page.tsx",["138"],"import { LockOutlined, MailOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Col, Form, Input, Row ,notification} from 'antd';\nimport React, { useEffect, useState } from 'react'\nimport { SignupDataI } from './signup';\nimport {useStoreActions,useStoreState} from '../../hooks/easyPeasy'\nimport './signUp.css'\nimport { useHistory } from 'react-router';\nimport * as ROUTES from '../../utils/routes'\n\nexport const SignUp: React.FC = () => {\n  const {signupUser,setSignupUserRes} = useStoreActions(a=>a.auth)\n  const {signupUserLod,signupUserRes} = useStoreState(s=>s.auth)\n  const [error, setError] = useState(false);\n  const [form] = Form.useForm()\n  const history = useHistory()\n\n  useEffect(()=>{\n    if(signupUserRes){\n      if(signupUserRes.success){\n        notification.success({message:\"Signup successfull\",description:\"Please login\"})\n        setSignupUserRes(null)\n        history.push(ROUTES.LOGIN)\n      }else{\n        notification.error({message:signupUserRes.message})\n        setSignupUserRes(null)    }\n      \n    }\n  },[signupUserRes])\n\n  function handleSignup(value:SignupDataI){\n    if(value.password.toLocaleLowerCase() === value.confirm_password.toLocaleLowerCase()){\n      signupUser(value)\n    }else{\n      setError(true)\n    }\n  }\n\n  return <div className=\"signup\">\n\n    <h2>Read Write & Share</h2>\n    <div style={{ background: \"#fff\", padding: \"20px\" }}>\n      <Form name=\"login\" form={form} onFinish={(value)=>handleSignup(value)}>\n        <Form.Item\n          style={{ width: \"400px\" }}\n          name=\"fullName\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your full name!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={\n              <UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />\n              // <Icon type=\"user\" />\n            }\n            placeholder=\"Full Name\"\n            size=\"large\"\n            name=\"fullName\"\n            type=\"text\"\n          />\n        </Form.Item>\n        <Form.Item\n          style={{ width: \"400px\" }}\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your  email!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<MailOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            placeholder=\"Email\"\n            size=\"large\"\n            name=\"email\"\n            type=\"email\"\n          />\n        </Form.Item>\n        <Form.Item\n          style={{ width: \"400px\" }}\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input\n            prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            type=\"password\"\n            placeholder=\"Password\"\n            size=\"large\"\n            name=\"password\"\n            onChange={()=>setError(false)}\n          />\n        </Form.Item>\n        <Form.Item\n          style={{ width: \"400px\" }}\n          name=\"confirm_password\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input\n            prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            size=\"large\"\n            name=\"confirm_password\"\n            onChange={()=>setError(false)}\n          />\n        </Form.Item>\n        <span style={{ color: \"red\" }}>\n          {error ? \"Password and Confirm Password not matched\" : \"\"}\n        </span>\n        <Row justify=\"space-between\">\n          <Col>\n            {/* <Checkbox onChange={onRememberChange}>Remember me</Checkbox> */}\n          </Col>\n          <Col>\n            <Button htmlType=\"submit\" loading={signupUserLod}>\n              Signup\n              </Button>\n          </Col>\n        </Row>\n        <div className=\"form-group\">\n          <a href=\"/login\">Already have an Account? Login</a>\n        </div>\n      </Form>\n    </div>\n\n  </div>\n}\n","/home/mizan/Documents/myprojects/Read-write-share/ui/src/pages/profile/Profile.page.tsx",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/navigation/Navigation.component.tsx",["139"],"import { Input, Space, Tooltip, notification,Popover, Avatar, Button, Typography, List, Divider } from \"antd\";\nimport { EditOutlined, FlagOutlined, LoginOutlined, LogoutOutlined, NotificationOutlined, PlusOutlined, SettingOutlined, UserOutlined } from '@ant-design/icons'\nimport React from \"react\";\nimport './navigation.css'\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport * as ROUTES from '../../utils/routes'\nimport { CreatePost } from \"../Create/CreatePost/CreatePost.component\";\nimport { useStoreState, useStoreActions } from \"../../hooks/easyPeasy\";\nimport CreateEvent from \"../Create/CreateEvent/CreateEvent.component\";\n\nconst { Search } = Input\ninterface NavigationProps { }\n\n\nexport const Navigation: React.FC<NavigationProps> = ({ children }) => {\n\n  const { setCreatePostDia } = useStoreActions(state => state.post)\n  const { setCreateEventDia } = useStoreActions(state => state.event)\n  const { createPostDia } = useStoreState(state => state.post)\n  const { createEventDia } = useStoreState(state => state.event)\n  // const { user } = useStoreState(state => state.auth)\n  const { userDetails } = useStoreState(state => state.profile)\n\n  const history = useHistory()\n\n\n  const createPopover = () => (\n    <List itemLayout=\"horizontal\" style={{ width: \"150px\" }} split={false}>\n      <List.Item\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n\n          setCreatePostDia(true)\n        }}\n      >\n        <Space size=\"small\" direction=\"horizontal\">\n          {/* <PlusOutlined /> */}\n          <Typography>Post</Typography>\n        </Space>\n      </List.Item>\n      <List.Item\n        onClick={() => {\n          setCreateEventDia(true)\n        }}\n        style={{ cursor: \"pointer\" }}>\n        <Space size=\"small\" direction=\"horizontal\">\n          {/* <PlusOutlined /> */}\n          <Typography>Event</Typography>\n        </Space>\n      </List.Item>\n    </List>\n  )\n\n  const notificationPopover = () => (\n    <div>\n      <List>\n        {[1, 2, 3, 4].map((i) => {\n          return (\n            <List.Item>\n              <Typography>Simple Notification</Typography>\n            </List.Item>\n          );\n        })}\n      </List>\n    </div>\n  );\n\n  const profilePopover = () => (\n    <List\n      itemLayout=\"horizontal\"\n      style={{ width: \"150px\", cursor: \"pointer\" }}\n      split={false}\n    >\n      {userDetails ? (\n        <>\n          {\" \"}\n          <List.Item>\n            <Space size=\"small\" direction=\"horizontal\">\n              <UserOutlined />\n              <NavLink to={ROUTES.PROFILE}>Profile</NavLink>\n            </Space>\n          </List.Item>\n          <List.Item>\n            <Space size=\"small\" direction=\"horizontal\">\n              <FlagOutlined />\n\n              <NavLink to={\"\"}>Saved</NavLink>\n            </Space>\n          </List.Item>\n          <List.Item>\n            <Space size=\"small\" direction=\"horizontal\">\n              <SettingOutlined />\n\n              <NavLink to={\"\"}>Setting</NavLink>\n            </Space>\n          </List.Item>\n          <Divider></Divider>\n          <List.Item>\n            <Button\n              onClick={() => {\n                localStorage.removeItem(\"rwd_t\");\n                notification.success({message:\"Logged Out SuccessFull\"})\n                setTimeout(() => {\n                  window.location.reload();\n                }, 600);\n              }}\n              style={{ border: \"none\" }}\n              icon={<LogoutOutlined />}\n            >\n              Logout\n            </Button>\n          </List.Item>\n        </>\n      ) : (\n          <>\n            <List.Item>\n              <Space>\n                <LoginOutlined />\n                <NavLink to=\"/login\">Login</NavLink>\n              </Space>\n            </List.Item>\n            <List.Item>\n              <Space>\n                <EditOutlined />\n                <NavLink to=\"/signup\">Signup</NavLink>\n              </Space>\n            </List.Item>\n          </>\n        )}\n    </List>\n  );\n\n\n  return (\n    <div className=\"flex-between\">\n      <div>\n        <h4\n          className=\"pointer\"\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          RW&D\n              </h4>\n      </div>\n      <div>\n        <Search placeholder=\"Search...\" size=\"small\" style={{ textAlign: \"inherit\", marginTop: '15px' }} />\n      </div>\n      <div>\n        <div className=\"sectionDesktop\">\n          <Space direction=\"horizontal\" size=\"large\">\n            {/* <Tooltip title=\"Create\"> */}\n            <Popover\n              content={createPopover()}\n              placement=\"bottomLeft\"\n              trigger=\"click\"\n              className=\"pointer\"\n            >\n              Create\n              </Popover>\n            {/* </Tooltip> */}\n            <Tooltip title=\"Notification\">\n              <Popover\n                content={notificationPopover()}\n                placement=\"bottomLeft\"\n                trigger=\"click\"\n              >\n                <NotificationOutlined style={{ color: \"#000\" }} />\n              </Popover>\n            </Tooltip>\n            <Tooltip title=\"user\">\n              <Popover\n                content={profilePopover()}\n                placement=\"bottomLeft\"\n                trigger=\"click\"\n              >\n                <Avatar\n                  // src={`${API_BASE}/${userData?.photo}`}\n                  size=\"large\"\n                  style={{ marginRight: 5, cursor: \"pointer\" }}\n                />\n              </Popover>\n            </Tooltip>\n          </Space>\n        </div>\n        <div className=\"sectionMobile\">\n          <Button>moreIcon</Button>\n        </div>\n      </div>\n\n      {createPostDia ? <CreatePost /> : null}\n      {createEventDia ? <CreateEvent /> : null}\n    </div>\n  );\n};\n\n\n\n\n\n\n\n","/home/mizan/Documents/myprojects/Read-write-share/ui/src/services/http.ts",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/services/profile.ts",["140"],"import { get,patch,post,postFile } from \"./http\";\n\nexport const getUserDetails = () => get(`/user`)\nexport const updateUserProfile = (payload:any) => patch(`/user`,payload)\nexport const uploadSinglePhoto = (payload:any) => postFile(`/user/singlePhoto`,payload)\n\n\n","/home/mizan/Documents/myprojects/Read-write-share/ui/src/services/auth.ts",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/profileTab/ProfileTab.component.tsx",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/comon/Container.component.tsx",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/profileCover/ProfileCover.component.tsx",["141","142"],"import { CameraOutlined } from '@ant-design/icons'\nimport { notification, Tooltip, Image, Button } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { useStoreActions, useStoreState } from '../../hooks/easyPeasy'\nimport { REACT_APP_ASSET_ROOT } from '../../utils/config'\nimport { ProfileAvater } from '../profileAvater/ProfileAvater.component'\nimport './profileCover.css'\nexport const ProfileCover: React.FC = ({ children }) => {\n\n  const { userDetails, uploadSinglePhotoRes } = useStoreState(a => a.profile)\n  const { uploadSinglePhoto, setUploadSinglePhotoRes, getUserDetails } = useStoreActions(a => a.profile)\n  const [cover, setCover] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (cover) {\n      if (uploadSinglePhotoRes) {\n        getUserDetails()\n        notification.success({ message: \"Cover photo updated\" })\n        setUploadSinglePhotoRes(false)\n      }\n    }\n\n  }, [uploadSinglePhotoRes])\n  function handleFileChange(event: any) {\n    setCover(true)\n    let postData = {\n      file: event.target.files[0],\n      type: \"cover\"\n    }\n    uploadSinglePhoto(postData)\n  }\n\n\n  return <div style={{ position: \"relative\" }}>\n    <div style={{ marginTop: \"5px\" }}>\n\n      <Image\n        width={'100%'}\n        height=\"300px\"\n        src={`${REACT_APP_ASSET_ROOT}${userDetails?.coverPhotoUrl}`}\n        placeholder={\n          <Image\n            preview={false}\n            src={`${REACT_APP_ASSET_ROOT}${userDetails?.coverPhotoUrl}`}\n            width={200}\n          />\n        }\n      />\n      <Tooltip title=\"Uplode Cover Photo\">\n        <label className=\"CoverPhotoUplodeLabel\">\n          <CameraOutlined style={{ color: \"#fff\" }} />\n          <input type=\"file\" style={{ display: \"none\" }} onChange={handleFileChange}></input>\n        </label>\n      </Tooltip>\n    </div>\n    <div>\n      <ProfileAvater />\n    </div>\n  </div>\n\n}\n","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/userDetailes/UserDetailes.component.tsx",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/Create/CreatePost/CreatePost.component.tsx",["143"],"import { Form, Modal, notification } from 'antd';\nimport React, { useEffect } from 'react'\nimport SunEditor, { buttonList } from 'suneditor-react';\nimport { useStoreActions, useStoreState } from '../../../hooks/easyPeasy';\nexport const CreatePost: React.FC = ({ children }) => {\n    const { setCreatePostDia,createPost,setCreatePostRes } = useStoreActions(action => action.post)\n    const { createPostDia,createPostRes,createPostLod } = useStoreState(state => state.post)\n\n\n    const [form] = Form.useForm()\n    useEffect(()=>{\n        if(createPostRes){\n            notification.success({message:\"Post created Successfully\"})\n            setCreatePostRes(false)\n            setCreatePostDia(false)\n        }\n    },[createPostRes])\n\n    function onFinish(value:any){\n        createPost(value)\n    }\n\n    return (\n        <Modal\n            visible={createPostDia}\n            title=\"Create Post\"\n            width=\"60%\"\n            okText=\"Post\"\n            onCancel={() => setCreatePostDia(false)}\n            okButtonProps={{\n                htmlType:'submit',\n                form:\"create-post\",\n                loading:createPostLod\n\n            }}\n        >\n            <Form layout=\"vertical\" form={form} onFinish={onFinish} name=\"create-post\">\n                <Form.Item\n                    label=\"Content:\"\n                    name=\"body\"\n                    rules={[{ required: true, message: \"Please write Post Content\" }]}\n                >\n                    <SunEditor\n                        placeholder=\"content:\"\n                        setOptions={{ buttonList: buttonList.formatting }}\n                        setDefaultStyle=\"height:auto\"\n                    // onChange={(val) => handleChange(val)}\n                    />\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n}\n","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/Create/CreateEvent/CreateEvent.component.tsx",["144","145"],"import { Modal, Form, Input, DatePicker, notification } from 'antd';\nimport React, { ReactElement, useEffect } from 'react'\nimport SunEditor, { buttonList } from 'suneditor-react';\nimport EventType from '../../DropDowns/EventType';\nimport moment from 'moment'\nimport { useStoreState, useStoreActions } from '../../../hooks/easyPeasy';\ninterface Props {\n\n}\n\nexport default function CreateEvent({ }: Props): ReactElement {\n    const [form] = Form.useForm()\n\n    const { createEventDia ,createEventLod,createEventRes} = useStoreState(state => state.event)\n    const { setCreateEventDia,setCreateEventRes ,createEvent} = useStoreActions(action => action.event)\n\n    useEffect(()=>{\n        if(createEventRes){\n            notification.success({message:\"Event created Successfully\"})\n            setCreateEventRes(false)\n            setCreateEventDia(false)\n        }\n    },[createEventRes])\n\n    function disabledDate(current: any) {\n        // Can not select days before today and today\n        return current && current < moment().endOf(\"day\");\n    }\n\n    function onFinish(value: any) {\n        createEvent(value)\n     \n    }\n\n    return (\n        <Modal\n            visible={createEventDia}\n            title=\"Create Event\"\n            width=\"60%\"\n            okText=\"Create\"\n            onCancel={() => setCreateEventDia(false)}\n            okButtonProps={{ form: \"create-event\", htmlType: \"submit\",loading:createEventLod }}\n        >\n            <Form layout=\"vertical\" form={form} onFinish={onFinish} name=\"create-event\">\n                <Form.Item\n                    label=\"Title:\"\n                    name=\"title\"\n                    rules={[{ required: true, message: \"Please a title\" }]}\n                >\n                    <Input placeholder=\"Title:\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Description:\"\n                    name=\"des\"\n                    rules={[\n                        { required: true, message: \"Please write event description\" },\n                    ]}\n                >\n                    <SunEditor\n                        placeholder=\"Description:\"\n                        setOptions={{ buttonList: buttonList.formatting }}\n                        setDefaultStyle=\"min-height:150px\"\n                    />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Event Type:\"\n                    name=\"eventType\"\n                    rules={[{ required: true, message: \"Please select event Type\" }]}\n                    style={{ marginTop: \"10px\" }}\n                >\n                    <EventType onChange={() => { }} />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Event Expired Date:\"\n                    name=\"endDate\"\n                    rules={[\n                        { required: true, message: \"Please write event description\" },\n                    ]}\n                    style={{ marginTop: \"10px\" }}\n                >\n                    <DatePicker disabledDate={disabledDate} />\n                </Form.Item>\n            </Form>\n        </Modal>\n\n    );\n}\n","/home/mizan/Documents/myprojects/Read-write-share/ui/src/utils/config.ts",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/profileAvater/ProfileAvater.component.tsx",["146"],"import { CameraOutlined } from '@ant-design/icons'\nimport { Tooltip, Image, notification } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport './profileAvater.css'\nimport { useStoreActions, useStoreState } from '../../hooks/easyPeasy'\nimport { REACT_APP_ASSET_ROOT } from '../../utils/config'\n\nexport const ProfileAvater: React.FC = ({ children }) => {\n\n  const { userDetails, uploadSinglePhotoRes } = useStoreState(a => a.profile)\n  const { uploadSinglePhoto, setUploadSinglePhotoRes, getUserDetails } = useStoreActions(a => a.profile)\n\n  const [profile,setProfile] = useState<boolean>(false)\n  useEffect(() => {\n    if(profile){\n      if (uploadSinglePhotoRes) {\n        getUserDetails()\n        notification.success({ message: \"Profile photo updated\" })\n        setUploadSinglePhotoRes(false)\n        setProfile(false)\n      }\n    }\n\n  }, [uploadSinglePhotoRes])\n\n\n\n  function handleFileChange(event: any) {\n    setProfile(true)\n    let postData = {\n      file: event.target.files[0],\n      type: \"profile\"\n    }\n    uploadSinglePhoto(postData)\n  }\n\n  return <div className=\"profile-card\">\n    <Image\n      className=\"Avatar\"\n      src={`${REACT_APP_ASSET_ROOT}${userDetails?.photoUrl}`}\n      placeholder={\n        <Image\n          preview={false}\n          src={`${REACT_APP_ASSET_ROOT}${userDetails?.photoUrl}`}\n          width={'auto'}\n          height={'auto'}\n        />\n      }\n    />\n    <Tooltip title=\"Uplode Profile Photo\">\n      <label className=\"profilePhotoUplodeLabel\">\n        <CameraOutlined style={{ color: \"#000\" }} />\n        <input type=\"file\" style={{ display: \"none\" }} onChange={handleFileChange}></input>\n      </label>\n    </Tooltip>\n  </div>\n}\n\n\n","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/Modals/updateUser/UpdateUser.component.tsx",["147","148"],"import { DatePicker, Input, Modal, notification } from 'antd'\nimport { Form } from 'antd'\nimport React, { ReactElement, useEffect } from 'react'\nimport { useStoreActions, useStoreState } from '../../../hooks/easyPeasy'\nimport moment from \"moment\"\ninterface Props {\n\n}\n\nexport default function UpdateUser({ }: Props): ReactElement {\n\n    const {\n        updateProfileDia,\n        userDetails,\n        updateUserRes,\n        updateUserLod,\n    \n     } = useStoreState(s => s.profile)\n    const {\n        setUpdateProfileDia,\n        updateUserProfile,\n        setUpdateUserRes,\n        getUserDetails\n     } = useStoreActions(s => s.profile)\n\n    const [form] = Form.useForm()\n\n    useEffect(()=>{\n        if(updateUserRes){\n            notification.success({message:\"Information Updated Successfully\"})\n            getUserDetails(userDetails.id)\n            setUpdateUserRes(false) \n            onModalClose()\n        }\n    },[updateUserRes])\n\n    function onFinish(value: any) {\n        console.log(value)\n        value.id = userDetails.id\n        updateUserProfile(value)\n    }\n    function onModalClose(){\n        setUpdateProfileDia(false)\n    }\n    return (\n        <Modal\n            visible={updateProfileDia}\n            onCancel={() => onModalClose()}\n            // onOk={() => setUpdateProfileDia(false)}\n            title=\"Update Profile\"\n            okText={\"Save\"}\n            okButtonProps={{ htmlType: \"submit\" ,loading:updateUserLod,form:\"updateProfile\"}}\n        >\n            <Form\n                layout=\"vertical\"\n                form={form}\n                onFinish={(value) => onFinish(value)}\n                name=\"updateProfile\"\n                >\n                <Form.Item\n                    name=\"phone\"\n                    label=\"Phone:\"\n                    rules={[{ required: true }]}\n                    className=\"title-Text\"\n                    initialValue={userDetails?.phone}\n                >\n                    <Input defaultValue={userDetails?.phone} />\n                </Form.Item>\n                <Form.Item\n                    name=\"address\"\n                    label=\"Address:\"\n                    rules={[{ required: true }]}\n                    className=\"title-Text\"\n                    initialValue={userDetails?.address}\n                >\n                    <Input defaultValue={userDetails?.address} />\n                </Form.Item>\n                <Form.Item\n                    name=\"dob\"\n                    label=\"Birth Date:\"\n                    rules={[{ required: true }]}\n                    className=\"title-Text\"\n                    initialValue={moment(userDetails?.dob)}\n                >\n                    <DatePicker value={moment(userDetails?.dob)} />\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n","/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/DropDowns/EventType.tsx",[],"/home/mizan/Documents/myprojects/Read-write-share/ui/src/components/userpost/UserPost.component.tsx",["149"],"import React, { useEffect } from \"react\";\nimport { useStoreState } from \"../../hooks/easyPeasy\";\nimport { get } from \"../../services/http\";\n\ntype Props = {};\n\nexport default function UserPost({}: Props) {\n  const { user } = useStoreState((s) => s.auth);\n\n  useEffect(() => {\n    if (user) {\n      const getPost = async () => {\n        const res = await get(\"/post/user-post\");\n        if (res.ok) {\n          const data = await res.json();\n          console.log(data);\n        }\n      };\n      getPost();\n    }\n  }, [user]);\n  console.log(\"user\", user);\n  return <div>UserPost.component</div>;\n}\n",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":20,"column":6,"nodeType":"156","endLine":20,"endColumn":8,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"158","line":28,"column":5,"nodeType":"156","endLine":28,"endColumn":19,"suggestions":"159"},{"ruleId":"154","severity":1,"message":"160","line":28,"column":5,"nodeType":"156","endLine":28,"endColumn":20,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":2,"column":91,"nodeType":"164","messageId":"165","endLine":2,"endColumn":103},{"ruleId":"162","severity":1,"message":"166","line":1,"column":20,"nodeType":"164","messageId":"165","endLine":1,"endColumn":24},{"ruleId":"162","severity":1,"message":"167","line":2,"column":40,"nodeType":"164","messageId":"165","endLine":2,"endColumn":46},{"ruleId":"154","severity":1,"message":"168","line":23,"column":6,"nodeType":"156","endLine":23,"endColumn":28,"suggestions":"169"},{"ruleId":"154","severity":1,"message":"170","line":17,"column":7,"nodeType":"156","endLine":17,"endColumn":22,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":11,"column":37,"nodeType":"174","messageId":"175","endLine":11,"endColumn":47},{"ruleId":"154","severity":1,"message":"176","line":23,"column":7,"nodeType":"156","endLine":23,"endColumn":23,"suggestions":"177"},{"ruleId":"154","severity":1,"message":"178","line":24,"column":6,"nodeType":"156","endLine":24,"endColumn":28,"suggestions":"179"},{"ruleId":"172","severity":1,"message":"173","line":10,"column":36,"nodeType":"174","messageId":"175","endLine":10,"endColumn":46},{"ruleId":"154","severity":1,"message":"180","line":35,"column":7,"nodeType":"156","endLine":35,"endColumn":22,"suggestions":"181"},{"ruleId":"172","severity":1,"message":"173","line":7,"column":34,"nodeType":"174","messageId":"175","endLine":7,"endColumn":43},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUserDetails' and 'setUserData'. Either include them or remove the dependency array.","ArrayExpression",["184"],"React Hook useEffect has missing dependencies: 'history' and 'setLoginUserRes'. Either include them or remove the dependency array.",["185"],"React Hook useEffect has missing dependencies: 'history' and 'setSignupUserRes'. Either include them or remove the dependency array.",["186"],"@typescript-eslint/no-unused-vars","'PlusOutlined' is defined but never used.","Identifier","unusedVar","'post' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'cover', 'getUserDetails', and 'setUploadSinglePhotoRes'. Either include them or remove the dependency array.",["187"],"React Hook useEffect has missing dependencies: 'setCreatePostDia' and 'setCreatePostRes'. Either include them or remove the dependency array.",["188"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has missing dependencies: 'setCreateEventDia' and 'setCreateEventRes'. Either include them or remove the dependency array.",["189"],"React Hook useEffect has missing dependencies: 'getUserDetails', 'profile', and 'setUploadSinglePhotoRes'. Either include them or remove the dependency array.",["190"],"React Hook useEffect has missing dependencies: 'getUserDetails', 'onModalClose', 'setUpdateUserRes', and 'userDetails.id'. Either include them or remove the dependency array.",["191"],"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [getUserDetails, setUserData]",{"range":"208","text":"209"},"Update the dependencies array to be: [history, loginUserRes, setLoginUserRes]",{"range":"210","text":"211"},"Update the dependencies array to be: [history, setSignupUserRes, signupUserRes]",{"range":"212","text":"213"},"Update the dependencies array to be: [cover, getUserDetails, setUploadSinglePhotoRes, uploadSinglePhotoRes]",{"range":"214","text":"215"},"Update the dependencies array to be: [createPostRes, setCreatePostDia, setCreatePostRes]",{"range":"216","text":"217"},"Update the dependencies array to be: [createEventRes, setCreateEventDia, setCreateEventRes]",{"range":"218","text":"219"},"Update the dependencies array to be: [getUserDetails, profile, setUploadSinglePhotoRes, uploadSinglePhotoRes]",{"range":"220","text":"221"},"Update the dependencies array to be: [getUserDetails, onModalClose, setUpdateUserRes, updateUserRes, userDetails.id]",{"range":"222","text":"223"},[639,641],"[getUserDetails, setUserData]",[850,864],"[history, loginUserRes, setLoginUserRes]",[1050,1065],"[history, setSignupUserRes, signupUserRes]",[908,930],"[cover, getUserDetails, setUploadSinglePhotoRes, uploadSinglePhotoRes]",[715,730],"[createPostRes, setCreatePostDia, setCreatePostRes]",[869,885],"[createEventRes, setCreateEventDia, setCreateEventRes]",[861,883],"[getUserDetails, profile, setUploadSinglePhotoRes, uploadSinglePhotoRes]",[925,940],"[getUserDetails, onModalClose, setUpdateUserRes, updateUserRes, userDetails.id]"]