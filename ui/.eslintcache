[{"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\index.tsx":"1","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\reportWebVitals.ts":"2","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\App.tsx":"3","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\store\\index.ts":"4","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\home\\Home.component.tsx":"5","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\event.ts":"6","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\post.ts":"7","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\newsFeed\\NewsFeed.page.tsx":"8","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\utils\\routes.tsx":"9","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\login\\Login.page.tsx":"10","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\signup\\SignUp.page.tsx":"11","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\profile\\Profile.page.tsx":"12","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\navigation\\Navigation.component.tsx":"13","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\hooks\\easyPeasy.ts":"14","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\comon\\Container.component.tsx":"15","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileCover\\ProfileCover.component.tsx":"16","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileTab\\ProfileTab.component.tsx":"17","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\userDetailes\\UserDetailes.component.tsx":"18","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Create\\CreatePost\\CreatePost.component.tsx":"19","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Create\\CreateEvent\\CreateEvent.component.tsx":"20","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileAvater\\ProfileAvater.component.tsx":"21","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\DropDowns\\EventType.tsx":"22","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\utils\\config.ts":"23","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\auth.ts":"24","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\services\\auth.ts":"25","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\services\\http.ts":"26","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\profile.ts":"27","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Modals\\updateUser\\UpdateUser.component.tsx":"28","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\services\\profile.ts":"29"},{"size":655,"mtime":1614954765711,"results":"30","hashOfConfig":"31"},{"size":440,"mtime":1612463061260,"results":"32","hashOfConfig":"31"},{"size":762,"mtime":1618394630124,"results":"33","hashOfConfig":"31"},{"size":590,"mtime":1617478397947,"results":"34","hashOfConfig":"31"},{"size":1141,"mtime":1614954765712,"results":"35","hashOfConfig":"31"},{"size":334,"mtime":1614957360266,"results":"36","hashOfConfig":"31"},{"size":325,"mtime":1614954765713,"results":"37","hashOfConfig":"31"},{"size":111,"mtime":1612518624999,"results":"38","hashOfConfig":"31"},{"size":122,"mtime":1612541122484,"results":"39","hashOfConfig":"31"},{"size":2671,"mtime":1617375535876,"results":"40","hashOfConfig":"31"},{"size":4131,"mtime":1616000730105,"results":"41","hashOfConfig":"31"},{"size":836,"mtime":1618418352847,"results":"42","hashOfConfig":"31"},{"size":5936,"mtime":1618418352845,"results":"43","hashOfConfig":"31"},{"size":320,"mtime":1614271821182,"results":"44","hashOfConfig":"31"},{"size":165,"mtime":1612541122458,"results":"45","hashOfConfig":"31"},{"size":1390,"mtime":1618419749449,"results":"46","hashOfConfig":"31"},{"size":487,"mtime":1612541122461,"results":"47","hashOfConfig":"31"},{"size":2154,"mtime":1617375535874,"results":"48","hashOfConfig":"31"},{"size":1375,"mtime":1614957360264,"results":"49","hashOfConfig":"31"},{"size":2808,"mtime":1614957360263,"results":"50","hashOfConfig":"31"},{"size":708,"mtime":1618418352846,"results":"51","hashOfConfig":"31"},{"size":1009,"mtime":1614957360264,"results":"52","hashOfConfig":"31"},{"size":47,"mtime":1616000730110,"results":"53","hashOfConfig":"31"},{"size":3015,"mtime":1616155346462,"results":"54","hashOfConfig":"31"},{"size":299,"mtime":1616000730107,"results":"55","hashOfConfig":"31"},{"size":2118,"mtime":1618418352848,"results":"56","hashOfConfig":"31"},{"size":2841,"mtime":1618421511306,"results":"57","hashOfConfig":"31"},{"size":2883,"mtime":1617375535872,"results":"58","hashOfConfig":"31"},{"size":270,"mtime":1618394630126,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"biw10b",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\index.tsx",[],["127","128"],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\reportWebVitals.ts",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\App.tsx",["129"],"import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport { Home } from './pages/home/Home.component';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\nimport {useStoreActions} from '../src/hooks/easyPeasy'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nfunction App() {\r\n  const {setUserData} = useStoreActions(a=>a.auth)\r\n  const { getUserDetails } = useStoreActions(a => a.profile)\r\n  useEffect(()=>{\r\n    let token = localStorage.getItem('rwd_t')\r\n    \r\n    if(token){\r\n      const decoded:any = jwt_decode(token)\r\n      setUserData(decoded.user)\r\n    \r\n      getUserDetails(decoded.user.id)\r\n      \r\n    }\r\n  },[])\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n       <Home/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\store\\index.ts",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\home\\Home.component.tsx",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\event.ts",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\post.ts",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\newsFeed\\NewsFeed.page.tsx",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\utils\\routes.tsx",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\login\\Login.page.tsx",["130"],"import { KeyOutlined, MailOutlined } from '@ant-design/icons'\r\nimport { Button, Col, Form, Input, Row,notification } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { LoginDataI } from './login'\r\nimport './login.css'\r\nimport { useStoreActions, useStoreState } from '../../hooks/easyPeasy'\r\nimport * as ROUTER from '../../utils/routes'\r\n\r\nexport const Login: React.FC = () => {\r\n\r\n  const { loginUser, setLoginUserRes } = useStoreActions(a => a.auth)\r\n  const { loginUserLod, loginUserRes } = useStoreState(s => s.auth)\r\n\r\n  const [form] = Form.useForm()\r\n  const history = useHistory()\r\n\r\n  useEffect(()=>{\r\n    if(loginUserRes){\r\n      if(loginUserRes.success){\r\n        history.push(ROUTER.ROOT)\r\n        setLoginUserRes(null)\r\n      }else{\r\n        notification.error({message:\"UnAuthorized\"})\r\n      }\r\n    }\r\n  },[loginUserRes])\r\n\r\n  function handleLogin(value: LoginDataI) {\r\n    loginUser(value)\r\n  }\r\n\r\n  return <div className=\"login\"><h2>Read Write & Share</h2>\r\n    <div style={{ background: \"#fff\", padding: \"20px\" }}>\r\n      <Form name=\"login\" form={form} onFinish={(value) => handleLogin(value)}>\r\n        <Form.Item\r\n          style={{ width: \"400px\" }}\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your username or email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            style={{ width: \"400px\" }}\r\n            prefix={<MailOutlined />}\r\n            placeholder=\"Email\"\r\n            size=\"large\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          style={{ width: \"400px\" }}\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your password!\" }]}\r\n        >\r\n          <Input\r\n            style={{ width: \"400px\" }}\r\n            prefix={<KeyOutlined />}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            size=\"large\"\r\n          />\r\n        </Form.Item>\r\n        <Row justify=\"space-between\">\r\n          <Col></Col>\r\n          <Col>\r\n            <Button\r\n              htmlType=\"submit\"\r\n              style={{ color: \"#000\" }}\r\n              loading={loginUserLod}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"form-group\">\r\n          <a\r\n            href=\"/signup\"\r\n          // onClick={() => this.props.history.push(\"/signup\")}\r\n          >\r\n            Don't have an Account? Signup\r\n          </a>\r\n        </div>\r\n      </Form>\r\n    </div></div>\r\n}\r\n\r\n","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\signup\\SignUp.page.tsx",["131"],"import { LockOutlined, MailOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Button, Col, Form, Input, Row } from 'antd';\r\nimport React, { useState } from 'react'\r\nimport './signUp.css'\r\n\r\nexport const SignUp: React.FC = () => {\r\n  const [error, setError] = useState(false);\r\n  return <div className=\"signup\">\r\n\r\n    <h2>Read Write & Share</h2>\r\n    <div style={{ background: \"#fff\", padding: \"20px\" }}>\r\n      <Form name=\"login\" >\r\n        <Form.Item\r\n          style={{ width: \"400px\" }}\r\n          name=\"fullName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your full name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={\r\n              <UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n              // <Icon type=\"user\" />\r\n            }\r\n            placeholder=\"Full Name\"\r\n            size=\"large\"\r\n            name=\"fullName\"\r\n            type=\"text\"\r\n          // onChange={this.handleChange}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          style={{ width: \"400px\" }}\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your  email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<MailOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Email\"\r\n            size=\"large\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          style={{ width: \"400px\" }}\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your password!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            size=\"large\"\r\n            name=\"password\"\r\n            onChange={() => {\r\n              return error ? setError(false) : null;\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          style={{ width: \"400px\" }}\r\n          name=\"confirm_password\"\r\n          rules={[{ required: true, message: \"Please input your password!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            size=\"large\"\r\n            name=\"confirm_password\"\r\n            onChange={() => {\r\n              return error ? setError(false) : null;\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <span style={{ color: \"red\" }}>\r\n          {error ? \"Password and Confirm Password not matched\" : \"\"}\r\n        </span>\r\n\r\n        <Row justify=\"space-between\">\r\n          <Col>\r\n            {/* <Checkbox onChange={onRememberChange}>Remember me</Checkbox> */}\r\n          </Col>\r\n          <Col>\r\n            <Button htmlType=\"submit\" >\r\n              Signup\r\n              </Button>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"form-group\">\r\n          <a href=\"/login\">Already have an Account? Login</a>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n\r\n  </div>\r\n}\r\n","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\profile\\Profile.page.tsx",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\navigation\\Navigation.component.tsx",["132"],"import { Input, Space, Tooltip, notification, Popover, Avatar, Button, Typography, List, Divider } from \"antd\";\r\nimport { EditOutlined, FlagOutlined, LoginOutlined, LogoutOutlined, NotificationOutlined, PlusOutlined, SettingOutlined, UserOutlined } from '@ant-design/icons'\r\nimport React from \"react\";\r\nimport './navigation.css'\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport * as ROUTES from '../../utils/routes'\r\nimport { CreatePost } from \"../Create/CreatePost/CreatePost.component\";\r\nimport { useStoreState, useStoreActions } from \"../../hooks/easyPeasy\";\r\nimport CreateEvent from \"../Create/CreateEvent/CreateEvent.component\";\r\n\r\nconst { Search } = Input\r\ninterface NavigationProps { }\r\n\r\n\r\nexport const Navigation: React.FC<NavigationProps> = ({ children }) => {\r\n\r\n  const { setCreatePostDia } = useStoreActions(state => state.post)\r\n  const { setCreateEventDia } = useStoreActions(state => state.event)\r\n  const { createPostDia } = useStoreState(state => state.post)\r\n  const { createEventDia } = useStoreState(state => state.event)\r\n  // const { user } = useStoreState(state => state.auth)\r\n  const { userDetails } = useStoreState(state => state.profile)\r\n\r\n  const history = useHistory()\r\n\r\n\r\n  const createPopover = () => (\r\n    <List itemLayout=\"horizontal\" style={{ width: \"150px\" }} split={false}>\r\n      <List.Item\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => {\r\n\r\n          setCreatePostDia(true)\r\n        }}\r\n        key={1}\r\n      >\r\n        <Space size=\"small\" direction=\"horizontal\">\r\n          {/* <PlusOutlined /> */}\r\n          <Typography>Post</Typography>\r\n        </Space>\r\n      </List.Item>\r\n      <List.Item\r\n        onClick={() => {\r\n          setCreateEventDia(true)\r\n        }}\r\n        key={2}\r\n        style={{ cursor: \"pointer\" }}>\r\n        <Space size=\"small\" direction=\"horizontal\">\r\n          {/* <PlusOutlined /> */}\r\n          <Typography>Event</Typography>\r\n        </Space>\r\n      </List.Item>\r\n    </List>\r\n  )\r\n\r\n  const notificationPopover = () => (\r\n    <div>\r\n      <List>\r\n        {[1, 2, 3, 4].map((i) => {\r\n          return (\r\n            <List.Item key={i}>\r\n              <Typography>Simple Notification</Typography>\r\n            </List.Item>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const profilePopover = () => (\r\n    <List\r\n      itemLayout=\"horizontal\"\r\n      style={{ width: \"150px\", cursor: \"pointer\" }}\r\n      split={false}\r\n    >\r\n      {userDetails ? (\r\n        <>\r\n          {\" \"}\r\n          <List.Item key={1}>\r\n            <Space size=\"small\" direction=\"horizontal\">\r\n              <UserOutlined />\r\n              <NavLink to={ROUTES.PROFILE}>Profile</NavLink>\r\n            </Space>\r\n          </List.Item>\r\n          <List.Item key={2}>\r\n            <Space size=\"small\" direction=\"horizontal\">\r\n              <FlagOutlined />\r\n\r\n              <NavLink to={\"\"}>Saved</NavLink>\r\n            </Space>\r\n          </List.Item>\r\n          <List.Item key={3}>\r\n            <Space size=\"small\" direction=\"horizontal\">\r\n              <SettingOutlined />\r\n\r\n              <NavLink to={\"\"}>Setting</NavLink>\r\n            </Space>\r\n          </List.Item>\r\n          <Divider></Divider>\r\n          <List.Item key={4}>\r\n            <Button\r\n              onClick={() => {\r\n                localStorage.removeItem(\"rwd_t\");\r\n                notification.success({ message: \"Logged Out SuccessFull\" })\r\n                setTimeout(() => {\r\n                  window.location.reload();\r\n                }, 600);\r\n              }}\r\n              style={{ border: \"none\" }}\r\n              icon={<LogoutOutlined />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </List.Item>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <List.Item key={5}>\r\n            <Space>\r\n              <LoginOutlined />\r\n              <NavLink to=\"/login\">Login</NavLink>\r\n            </Space>\r\n          </List.Item>\r\n          <List.Item key={6}>\r\n            <Space>\r\n              <EditOutlined />\r\n              <NavLink to=\"/signup\">Signup</NavLink>\r\n            </Space>\r\n          </List.Item>\r\n        </>\r\n      )}\r\n    </List>\r\n  );\r\n\r\n\r\n  return (\r\n    <div className=\"flex-between\">\r\n      <div>\r\n        <h4\r\n          className=\"pointer\"\r\n          onClick={() => {\r\n            history.push(\"/\");\r\n          }}\r\n        >\r\n          RW&D\r\n              </h4>\r\n      </div>\r\n      <div>\r\n        <Search placeholder=\"Search...\" size=\"small\" style={{ textAlign: \"inherit\", marginTop: '15px' }} />\r\n      </div>\r\n      <div>\r\n        <div className=\"sectionDesktop\">\r\n          <Space direction=\"horizontal\" size=\"large\">\r\n            {/* <Tooltip title=\"Create\"> */}\r\n            <Popover\r\n              content={createPopover()}\r\n              placement=\"bottomLeft\"\r\n              trigger=\"click\"\r\n              className=\"pointer\"\r\n            >\r\n              Create\r\n              </Popover>\r\n            {/* </Tooltip> */}\r\n            <Tooltip title=\"Notification\">\r\n              <Popover\r\n                content={notificationPopover()}\r\n                placement=\"bottomLeft\"\r\n                trigger=\"click\"\r\n              >\r\n                <NotificationOutlined style={{ color: \"#000\" }} />\r\n              </Popover>\r\n            </Tooltip>\r\n            <Tooltip title=\"user\">\r\n              <Popover\r\n                content={profilePopover()}\r\n                placement=\"bottomLeft\"\r\n                trigger=\"click\"\r\n              >\r\n                <Avatar\r\n                  // src={`${API_BASE}/${userData?.photo}`}\r\n                  size=\"large\"\r\n                  style={{ marginRight: 5, cursor: \"pointer\" }}\r\n                />\r\n              </Popover>\r\n            </Tooltip>\r\n          </Space>\r\n        </div>\r\n        <div className=\"sectionMobile\">\r\n          <Button>moreIcon</Button>\r\n        </div>\r\n      </div>\r\n\r\n      {createPostDia ? <CreatePost /> : null}\r\n      {createEventDia ? <CreateEvent /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\hooks\\easyPeasy.ts",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\comon\\Container.component.tsx",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileCover\\ProfileCover.component.tsx",["133"],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileTab\\ProfileTab.component.tsx",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\userDetailes\\UserDetailes.component.tsx",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Create\\CreatePost\\CreatePost.component.tsx",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Create\\CreateEvent\\CreateEvent.component.tsx",["134"],"import { Modal, Form, Input, DatePicker } from 'antd';\r\nimport React, { ReactElement } from 'react'\r\nimport SunEditor, { buttonList } from 'suneditor-react';\r\nimport EventType from '../../DropDowns/EventType';\r\nimport moment from 'moment'\r\nimport { useStoreState,useStoreActions } from '../../../hooks/easyPeasy';\r\ninterface Props {\r\n\r\n}\r\n\r\nexport default function CreateEvent({ }: Props): ReactElement {\r\n    const [form] = Form.useForm()\r\n\r\n    const {createEventDia} = useStoreState(state=>state.event)\r\n    const {setCreateEventDia} = useStoreActions(action=>action.event)\r\n    function disabledDate(current:any) {\r\n        // Can not select days before today and today\r\n        return current && current < moment().endOf(\"day\");\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            visible={createEventDia}\r\n            title=\"Create Event\"\r\n            width=\"60%\"\r\n            okText=\"Create\"\r\n              onCancel={() => setCreateEventDia(false)}\r\n            okButtonProps={{ form: \"create-event\", htmlType: \"submit\" }}\r\n        //   confirmLoading={postEvtLod}\r\n        >\r\n            <Form layout=\"vertical\" form={form} onFinish={()=>{}} id=\"create-event\">\r\n                <Form.Item\r\n                    label=\"Title:\"\r\n                    name=\"title\"\r\n                    rules={[{ required: true, message: \"Please a title\" }]}\r\n                >\r\n                    <Input placeholder=\"Title:\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Description:\"\r\n                    name=\"des\"\r\n                    rules={[\r\n                        { required: true, message: \"Please write event description\" },\r\n                    ]}\r\n                >\r\n                    <SunEditor\r\n                        placeholder=\"Description:\"\r\n                        setOptions={{ buttonList: buttonList.formatting }}\r\n                        setDefaultStyle=\"min-height:150px\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Event Type:\"\r\n                    name=\"eventType\"\r\n                    rules={[{ required: true, message: \"Please select event Type\" }]}\r\n                    style={{ marginTop: \"10px\" }}\r\n                >\r\n                    <EventType onChange={() => { }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Event Expired Date:\"\r\n                    name=\"endDate\"\r\n                    rules={[\r\n                        { required: true, message: \"Please write event description\" },\r\n                    ]}\r\n                    style={{ marginTop: \"10px\" }}\r\n                >\r\n                    <DatePicker disabledDate={disabledDate} />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileAvater\\ProfileAvater.component.tsx",["135"],"import { CameraOutlined } from '@ant-design/icons'\r\nimport { Tooltip } from 'antd'\r\nimport Avatar from 'antd/lib/avatar/avatar'\r\nimport React from 'react'\r\n\r\nimport './profileAvater.css'\r\n\r\nexport const ProfileAvater: React.FC = ({ children }) => {\r\n\r\n  function onFieChange(e:React.FormEvent<HTMLInputElement>){\r\n    console.log(e)\r\n  }\r\n\r\n  return <div className=\"profile-card\">\r\n    <Avatar\r\n      alt=\"Cindy Baker\"\r\n      src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\r\n      className=\"Avatar\"\r\n    />\r\n    <Tooltip title=\"Uplode Profile Photo\">\r\n      <label className=\"profilePhotoUplodeLabel\">\r\n        <CameraOutlined style={{ color: \"#000\" }} />\r\n        <input type=\"file\" style={{ display: \"none\" }} ></input>\r\n      </label>\r\n    </Tooltip>\r\n  </div>\r\n}\r\n\r\n\r\n","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\DropDowns\\EventType.tsx",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\utils\\config.ts",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\auth.ts",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\services\\auth.ts",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\services\\http.ts",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\profile.ts",[],"E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Modals\\updateUser\\UpdateUser.component.tsx",["136","137"],"import { DatePicker, Input, Modal, notification } from 'antd'\r\nimport { Form } from 'antd'\r\nimport React, { ReactElement, useEffect } from 'react'\r\nimport { useStoreActions, useStoreState } from '../../../hooks/easyPeasy'\r\nimport moment from \"moment\"\r\ninterface Props {\r\n\r\n}\r\n\r\nexport default function UpdateUser({ }: Props): ReactElement {\r\n\r\n    const {\r\n        updateProfileDia,\r\n        userDetails,\r\n        updateUserRes,\r\n        updateUserLod,\r\n    \r\n     } = useStoreState(s => s.profile)\r\n    const {\r\n        setUpdateProfileDia,\r\n        updateUserProfile,\r\n        setUpdateUserRes,\r\n        getUserDetails\r\n     } = useStoreActions(s => s.profile)\r\n\r\n    const [form] = Form.useForm()\r\n\r\n    useEffect(()=>{\r\n        if(updateUserRes){\r\n            notification.success({message:\"Information Updated Successfully\"})\r\n            getUserDetails(userDetails.id)\r\n            setUpdateUserRes(false) \r\n            onModalClose()\r\n        }\r\n    },[updateUserRes])\r\n\r\n    function onFinish(value: any) {\r\n        console.log(value)\r\n        value.id = userDetails.id\r\n        updateUserProfile(value)\r\n    }\r\n    function onModalClose(){\r\n        setUpdateProfileDia(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={updateProfileDia}\r\n            onCancel={() => onModalClose()}\r\n            // onOk={() => setUpdateProfileDia(false)}\r\n            title=\"Update Profile\"\r\n            okText={\"Save\"}\r\n            okButtonProps={{ htmlType: \"submit\" ,loading:updateUserLod,form:\"updateProfile\"}}\r\n        >\r\n            <Form\r\n                layout=\"vertical\"\r\n                form={form}\r\n                onFinish={(value) => onFinish(value)}\r\n                name=\"updateProfile\"\r\n                >\r\n                <Form.Item\r\n                    name=\"phone\"\r\n                    label=\"Phone:\"\r\n                    rules={[{ required: true }]}\r\n                    className=\"title-Text\"\r\n                    initialValue={userDetails?.phone}\r\n                >\r\n                    <Input defaultValue={userDetails?.phone} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"address\"\r\n                    label=\"Address:\"\r\n                    rules={[{ required: true }]}\r\n                    className=\"title-Text\"\r\n                    initialValue={userDetails?.address}\r\n                >\r\n                    <Input defaultValue={userDetails?.address} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"dob\"\r\n                    label=\"Birth Date:\"\r\n                    rules={[{ required: true }]}\r\n                    className=\"title-Text\"\r\n                    initialValue={moment(userDetails?.dob)}\r\n                >\r\n                    <DatePicker value={moment(userDetails?.dob)} />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","E:\\Projects\\React_Node\\Read-write-share\\ui\\src\\services\\profile.ts",["138"],"import { get,patch,post,postFile } from \"./http\";\r\n\r\nexport const getUserDetails = () => get(`/user`)\r\nexport const updateUserProfile = (payload:any) => patch(`/user`,payload)\r\nexport const uploadSinglePhoto = (payload:any) => postFile(`/user/singlePhoto`,payload)\r\n\r\n\r\n",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":22,"column":5,"nodeType":"145","endLine":22,"endColumn":7,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":28,"column":5,"nodeType":"145","endLine":28,"endColumn":19,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"149","line":28,"column":5,"nodeType":"145","endLine":28,"endColumn":20,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":2,"column":91,"nodeType":"153","messageId":"154","endLine":2,"endColumn":103},{"ruleId":"155","severity":1,"message":"156","line":21,"column":7,"nodeType":"157","endLine":31,"endColumn":8},{"ruleId":"158","severity":1,"message":"159","line":11,"column":37,"nodeType":"160","messageId":"161","endLine":11,"endColumn":47},{"ruleId":"151","severity":1,"message":"162","line":10,"column":12,"nodeType":"153","messageId":"154","endLine":10,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":10,"column":36,"nodeType":"160","messageId":"161","endLine":10,"endColumn":46},{"ruleId":"143","severity":1,"message":"163","line":35,"column":7,"nodeType":"145","endLine":35,"endColumn":22,"suggestions":"164"},{"ruleId":"151","severity":1,"message":"165","line":1,"column":20,"nodeType":"153","messageId":"154","endLine":1,"endColumn":24},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUserDetails' and 'setUserData'. Either include them or remove the dependency array.","ArrayExpression",["168"],"React Hook useEffect has missing dependencies: 'history' and 'setLoginUserRes'. Either include them or remove the dependency array.",["169"],"React Hook useEffect has missing dependencies: 'history' and 'setSignupUserRes'. Either include them or remove the dependency array.",["170"],"@typescript-eslint/no-unused-vars","'PlusOutlined' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'onFieChange' is defined but never used.","React Hook useEffect has missing dependencies: 'getUserDetails', 'onModalClose', 'setUpdateUserRes', and 'userDetails.id'. Either include them or remove the dependency array.",["171"],"'post' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [getUserDetails, setUserData]",{"range":"180","text":"181"},"Update the dependencies array to be: [history, loginUserRes, setLoginUserRes]",{"range":"182","text":"183"},"Update the dependencies array to be: [history, setSignupUserRes, signupUserRes]",{"range":"184","text":"185"},"Update the dependencies array to be: [getUserDetails, onModalClose, setUpdateUserRes, updateUserRes, userDetails.id]",{"range":"186","text":"187"},[652,654],"[getUserDetails, setUserData]",[877,891],"[history, loginUserRes, setLoginUserRes]",[1077,1092],"[history, setSignupUserRes, signupUserRes]",[959,974],"[getUserDetails, onModalClose, setUpdateUserRes, updateUserRes, userDetails.id]"]