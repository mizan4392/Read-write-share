[{"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\index.tsx":"1","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\reportWebVitals.ts":"2","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\App.tsx":"3","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\navigation\\Navigation.component.tsx":"4","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\comon\\Container.component.tsx":"5","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\home\\Home.component.tsx":"6","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\newsFeed\\NewsFeed.page.tsx":"7","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\utils\\routes.tsx":"8","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\login\\Login.page.tsx":"9","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\signup\\SignUp.page.tsx":"10","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\profile\\Profile.page.tsx":"11","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\userDetailes\\UserDetailes.component.tsx":"12","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileAvater\\ProfileAvater.component.tsx":"13","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileCover\\ProfileCover.component.tsx":"14","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileTab\\ProfileTab.component.tsx":"15","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Create\\CreatePost\\CreatePost.component.tsx":"16","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\store\\index.ts":"17","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\post.ts":"18","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\hooks\\easyPeasy.ts":"19","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\event.ts":"20","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Create\\CreateEvent\\CreateEvent.component.tsx":"21","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\DropDowns\\EventType.tsx":"22"},{"size":655,"mtime":1614954765711,"results":"23","hashOfConfig":"24"},{"size":440,"mtime":1612463061260,"results":"25","hashOfConfig":"24"},{"size":305,"mtime":1614954765709,"results":"26","hashOfConfig":"24"},{"size":5999,"mtime":1614957166922,"results":"27","hashOfConfig":"24"},{"size":165,"mtime":1612541122458,"results":"28","hashOfConfig":"24"},{"size":1141,"mtime":1614954765712,"results":"29","hashOfConfig":"24"},{"size":111,"mtime":1612518624999,"results":"30","hashOfConfig":"24"},{"size":122,"mtime":1612541122484,"results":"31","hashOfConfig":"24"},{"size":1862,"mtime":1612525099909,"results":"32","hashOfConfig":"24"},{"size":3202,"mtime":1612525099910,"results":"33","hashOfConfig":"24"},{"size":836,"mtime":1612541122464,"results":"34","hashOfConfig":"24"},{"size":1576,"mtime":1612541122462,"results":"35","hashOfConfig":"24"},{"size":708,"mtime":1612541122459,"results":"36","hashOfConfig":"24"},{"size":1036,"mtime":1612541122460,"results":"37","hashOfConfig":"24"},{"size":487,"mtime":1612541122461,"results":"38","hashOfConfig":"24"},{"size":1375,"mtime":1614954916458,"results":"39","hashOfConfig":"24"},{"size":377,"mtime":1614955943206,"results":"40","hashOfConfig":"24"},{"size":325,"mtime":1614954765713,"results":"41","hashOfConfig":"24"},{"size":320,"mtime":1614271821182,"results":"42","hashOfConfig":"24"},{"size":334,"mtime":1614955864252,"results":"43","hashOfConfig":"24"},{"size":2808,"mtime":1614956011457,"results":"44","hashOfConfig":"24"},{"size":1009,"mtime":1614955215765,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"79qke7",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\index.tsx",[],["94","95"],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\reportWebVitals.ts",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\App.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\navigation\\Navigation.component.tsx",["96"],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\comon\\Container.component.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\home\\Home.component.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\newsFeed\\NewsFeed.page.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\utils\\routes.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\login\\Login.page.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\signup\\SignUp.page.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\pages\\profile\\Profile.page.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\userDetailes\\UserDetailes.component.tsx",["97","98"],"\r\nimport { EditOutlined } from '@ant-design/icons'\r\nimport { Button, Card, Rate, Tooltip } from 'antd'\r\nimport React from 'react'\r\nimport { ProfileAvater } from '../profileAvater/ProfileAvater.component'\r\nimport { ProfileCover } from '../profileCover/ProfileCover.component'\r\nimport './userDetailes.css'\r\n\r\nexport const UserDetailes: React.FC = ({ children }) => {\r\n    return <div>\r\n        <Card\r\n            style={{ width: 300, height: \"300px\" }}\r\n            actions={[\r\n                <Tooltip title=\"Update Profile\">\r\n                    <Button icon={<EditOutlined />} style={{width:\"80%\",borderRadius:\"10px\"}}></Button>\r\n                </Tooltip>\r\n\r\n            ]}\r\n        >\r\n            <div style={{ color: \"black\", textAlign: \"left\", marginTop: \"80px\" }}>\r\n                <div style={{ textAlign: \"center\" }}> <Tooltip title=\"Rating\"><Rate value={10} disabled /></Tooltip> <span>5.0</span></div>\r\n                <div>\r\n                    <div>\r\n                        <span style={{ color: \"black\" }}></span>\r\n                    </div>\r\n                    <div>\r\n                        <label style={{ color: \"black\" }}>Phone:</label>\r\n                    </div>\r\n                    <div>\r\n                        <label style={{ color: \"black\" }}>\r\n                            Address:\r\n                  </label>\r\n                    </div>\r\n                    <div>\r\n                        <label style={{ color: \"black\" }}>Email:</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Card>\r\n    </div>\r\n}\r\n\r\n","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileAvater\\ProfileAvater.component.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileCover\\ProfileCover.component.tsx",["99"],"import { CameraOutlined } from '@ant-design/icons'\r\nimport { Tooltip } from 'antd'\r\nimport React from 'react'\r\nimport { ProfileAvater } from '../profileAvater/ProfileAvater.component'\r\nimport './profileCover.css'\r\nexport const ProfileCover: React.FC = ({ children }) => {\r\n    return   <div style={{ position: \"relative\" }}>\r\n    <div style={{marginTop:\"5px\"}}>\r\n      <img\r\n        src=\"https://i.pinimg.com/originals/23/05/35/230535d2013c6b8f34e2304d050df22f.jpg\"\r\n        height=\"300px\"\r\n        width=\"100%\"\r\n        style={{\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundPosition: \"center\",\r\n          position: \"relative\",\r\n          borderRadius:\"15px\"\r\n        }}\r\n      ></img>\r\n      <Tooltip title=\"Uplode Cover Photo\">\r\n        <label className=\"CoverPhotoUplodeLabel\">\r\n          <CameraOutlined style={{ color: \"#fff\" }} />\r\n          <input type=\"file\" style={{ display: \"none\" }}></input>\r\n        </label>\r\n      </Tooltip>\r\n    </div>\r\n    <div>\r\n        <ProfileAvater />\r\n    </div>\r\n  </div>\r\n\r\n}\r\n","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\profileTab\\ProfileTab.component.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Create\\CreatePost\\CreatePost.component.tsx",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\store\\index.ts",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\post.ts",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\hooks\\easyPeasy.ts",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\states\\event.ts",[],"G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\Create\\CreateEvent\\CreateEvent.component.tsx",["100"],"import { Modal, Form, Input, DatePicker } from 'antd';\r\nimport React, { ReactElement } from 'react'\r\nimport SunEditor, { buttonList } from 'suneditor-react';\r\nimport EventType from '../../DropDowns/EventType';\r\nimport moment from 'moment'\r\nimport { useStoreState,useStoreActions } from '../../../hooks/easyPeasy';\r\ninterface Props {\r\n\r\n}\r\n\r\nexport default function CreateEvent({ }: Props): ReactElement {\r\n    const [form] = Form.useForm()\r\n\r\n    const {createEventDia} = useStoreState(state=>state.event)\r\n    const {setCreateEventDia} = useStoreActions(action=>action.event)\r\n    function disabledDate(current:any) {\r\n        // Can not select days before today and today\r\n        return current && current < moment().endOf(\"day\");\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            visible={createEventDia}\r\n            title=\"Create Event\"\r\n            width=\"60%\"\r\n            okText=\"Create\"\r\n              onCancel={() => setCreateEventDia(false)}\r\n            okButtonProps={{ form: \"create-event\", htmlType: \"submit\" }}\r\n        //   confirmLoading={postEvtLod}\r\n        >\r\n            <Form layout=\"vertical\" form={form} onFinish={()=>{}} id=\"create-event\">\r\n                <Form.Item\r\n                    label=\"Title:\"\r\n                    name=\"title\"\r\n                    rules={[{ required: true, message: \"Please a title\" }]}\r\n                >\r\n                    <Input placeholder=\"Title:\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Description:\"\r\n                    name=\"des\"\r\n                    rules={[\r\n                        { required: true, message: \"Please write event description\" },\r\n                    ]}\r\n                >\r\n                    <SunEditor\r\n                        placeholder=\"Description:\"\r\n                        setOptions={{ buttonList: buttonList.formatting }}\r\n                        setDefaultStyle=\"min-height:150px\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Event Type:\"\r\n                    name=\"eventType\"\r\n                    rules={[{ required: true, message: \"Please select event Type\" }]}\r\n                    style={{ marginTop: \"10px\" }}\r\n                >\r\n                    <EventType onChange={() => { }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Event Expired Date:\"\r\n                    name=\"endDate\"\r\n                    rules={[\r\n                        { required: true, message: \"Please write event description\" },\r\n                    ]}\r\n                    style={{ marginTop: \"10px\" }}\r\n                >\r\n                    <DatePicker disabledDate={disabledDate} />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n","G:\\Projects\\React_Node\\Read-write-share\\ui\\src\\components\\DropDowns\\EventType.tsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":91,"nodeType":"107","messageId":"108","endLine":2,"endColumn":103},{"ruleId":"105","severity":1,"message":"109","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":23},{"ruleId":"105","severity":1,"message":"110","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":22},{"ruleId":"111","severity":1,"message":"112","line":9,"column":7,"nodeType":"113","endLine":19,"endColumn":8},{"ruleId":"114","severity":1,"message":"115","line":11,"column":37,"nodeType":"116","messageId":"117","endLine":11,"endColumn":47},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"@typescript-eslint/no-unused-vars","'PlusOutlined' is defined but never used.","Identifier","unusedVar","'ProfileAvater' is defined but never used.","'ProfileCover' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]